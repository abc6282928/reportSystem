<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.eliteams.quick4j.web.dao.ScrapMapper" >
  <resultMap id="BaseResultMap" type="com.eliteams.quick4j.web.model.Scrap" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="scrap_id" property="scrapId" jdbcType="VARCHAR" />
    <result column="material_id" property="materialId" jdbcType="VARCHAR" />
    <result column="material_describe" property="materialDescribe" jdbcType="VARCHAR" />
    <result column="scrap_time" property="scrapTime" jdbcType="TIMESTAMP" />
    <result column="classes" property="classes" jdbcType="VARCHAR" />
    <result column="scrap_num" property="scrapNum" jdbcType="INTEGER" />
    <result column="production_process" property="productionProcess" jdbcType="VARCHAR" />
    <result column="inspector" property="inspector" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="auditor" property="auditor" jdbcType="VARCHAR" />
    <result column="auditing_time" property="auditingTime" jdbcType="TIMESTAMP" />
    <result column="auditing_contents" property="auditingContents" jdbcType="VARCHAR" />
    <result column="scrap_auditing" property="scrapAuditing" jdbcType="INTEGER" />
    <result column="file" property="file" jdbcType="VARCHAR" />
    <result column="state" property="state" jdbcType="VARCHAR" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from scrap
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.eliteams.quick4j.web.model.Scrap" >
    insert into scrap (id, scrap_id, material_id, 
      material_describe, scrap_time, classes, 
      scrap_num, production_process, inspector, 
      create_time, auditor, auditing_time, 
      auditing_contents, scrap_auditing, file, 
      state)
    values (#{id,jdbcType=BIGINT}, #{scrapId,jdbcType=VARCHAR}, #{materialId,jdbcType=VARCHAR}, 
      #{materialDescribe,jdbcType=VARCHAR}, #{scrapTime,jdbcType=TIMESTAMP}, #{classes,jdbcType=VARCHAR}, 
      #{scrapNum,jdbcType=INTEGER}, #{productionProcess,jdbcType=VARCHAR}, #{inspector,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{auditor,jdbcType=VARCHAR}, #{auditingTime,jdbcType=TIMESTAMP}, 
      #{auditingContents,jdbcType=VARCHAR}, #{scrapAuditing,jdbcType=INTEGER}, #{file,jdbcType=VARCHAR}, 
      #{state,jdbcType=VARCHAR})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.eliteams.quick4j.web.model.Scrap" >
    update scrap
    set scrap_id = #{scrapId,jdbcType=VARCHAR},
      material_id = #{materialId,jdbcType=VARCHAR},
      material_describe = #{materialDescribe,jdbcType=VARCHAR},
      scrap_time = #{scrapTime,jdbcType=TIMESTAMP},
      classes = #{classes,jdbcType=VARCHAR},
      scrap_num = #{scrapNum,jdbcType=INTEGER},
      production_process = #{productionProcess,jdbcType=VARCHAR},
      inspector = #{inspector,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      auditor = #{auditor,jdbcType=VARCHAR},
      auditing_time = #{auditingTime,jdbcType=TIMESTAMP},
      auditing_contents = #{auditingContents,jdbcType=VARCHAR},
      scrap_auditing = #{scrapAuditing,jdbcType=INTEGER},
      file = #{file,jdbcType=VARCHAR},
      state = #{state,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select id, scrap_id, material_id, material_describe, scrap_time, classes, scrap_num, 
    production_process, inspector, create_time, auditor, auditing_time, auditing_contents, 
    scrap_auditing, file, state
    from scrap
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectAll" resultMap="BaseResultMap" >
    select id, scrap_id, material_id, material_describe, scrap_time, classes, scrap_num, 
    production_process, inspector, create_time, auditor, auditing_time, auditing_contents, 
    scrap_auditing, file, state
    from scrap
  </select>
</mapper>